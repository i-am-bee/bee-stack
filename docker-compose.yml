services:
  bee-api:
    user: root
    depends_on:
      redis: { condition: service_started }
      mongo: { condition: service_healthy }
      minio: { condition: service_started }
    image: icr.io/i-am-bee/bee-api:0.0.9
    command: >
      /bin/sh -c '
      output=$(npx mikro-orm seeder:run 2>&1);
      echo "$$output";
      if ! (echo "$$output" | grep -qiE "already seeded|success"); then
        echo "Error occured" && exit 1;
      fi &&
      node --enable-source-maps ./dist/server.js
      '
    env_file:
      - .env
    environment:
      MONGODB_URL: mongodb://mongo:27017?directConnection=true
      MONGODB_DATABASE_NAME: bee-api
      REDIS_URL: redis://redis:6379/0
      REDIS_CACHE_URL: redis://redis:6379/8
      AUTH_JWKS_URI: http://localhost:4000/v1/ui/jwks
      AUTH_JWT_ISSUER: https://localhost
      AUTH_JWT_AUDIENCE: bee-test
      HTTP_PROXY_URL: http://localhost:3128
      BEE_CODE_INTERPRETER_URL: http://bee-code-interpreter-k3s:30051

      BEE_CODE_INTERPRETER_STORAGE_BACKEND: filesystem
      BEE_CODE_INTERPRETER_FILE_STORAGE_PATH: /storage
      # Shutdown is not working properly anyway
      SHUTDOWN_GRACEFUL_PERIOD: 1

      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET_FILE_STORAGE: bee-api

      BEE_OBSERVE_API_URL: http://bee-observe:3009
      BEE_OBSERVE_API_AUTH_KEY: observe-auth-key

      MILVUS_HOST: milvus
      MILVUS_PORT: 19530
      MILVUS_USE_TLS: false
      MILVUS_USERNAME: user
      MILVUS_PASSWORD: password
      MILVUS_DATABASE_NAME: default

      RUN_BULLMQ_WORKERS: runs,runs:cleanup,vectorStores:cleanup,vectorStores:fileProcessor,files:extraction:node

      # Used to encrypt/decrypt values
      # You can use `$ openssl rand -base64 32` to generate new one
      CRYPTO_CIPHER_KEY: random_crypto_key
      OTEL_SDK_DISABLED: true

      # Required env variables used only in migrations
      USER_ID_DEFAULT: dummy
      PROJECT_ID_DEFAULT: proj_670cc04869ddffe24f4fd70f
      ORGANIZATION_ID_DEFAULT: org_670cc04869ddffe24f4fd70d
      ORGANIZATION_OWNER_ID_DEFAULT: dummy
      PROJECT_ADMIN_ID_DEFAULT: dummy
      AUTH_CLIENT_ID: dummy
      AUTH_CLIENT_SECRET: dummy
      AUTH_SERVER_PORT: 4001
      AUTH_WELL_KNOWN: http://127.0.0.1:4001/.well-known/openid-configuration
      AUTH_AUDIENCE: bee-test
    healthcheck:
      test: "wget --quiet -O - http://127.0.0.1:4000/healthcheck"
      interval: 3s
      retries: 20
      start_period: 5s
    volumes:
      - code-interpreter-storage:/storage
    ports:
      - "4000:4000"
    profiles: [all]

  bee-api-workers-python:
    user: root
    depends_on:
      redis: { condition: service_started }
      minio: { condition: service_started }
    image: icr.io/i-am-bee/bee-api-workers-python:0.0.9
    env_file:
      - .env
    environment:
      LOG_LEVEL: info

      REDIS_URL: redis://redis:6379/0

      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET_FILE_STORAGE: bee-api

      MONGODB_URL: mongodb://mongo:27017?directConnection=true
      MONGODB_DATABASE_NAME: bee-api

      RUN_BULLMQ_WORKERS: files:extraction:python
    healthcheck:
      test: "wget --quiet -O - http://127.0.0.1:8080/health"
      interval: 3s
      retries: 20
      start_period: 5s
    profiles: [all]

  bee-ui:
    depends_on:
      bee-api: { condition: service_healthy }
    image: icr.io/i-am-bee/bee-ui-local:0.0.5
    environment:
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: top-secret
      API_URL: http://bee-api:4000
      DUMMY_JWT_TOKEN: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0IiwicHJlZmVycmVkX3VzZXJuYW1lIjoiVGVzdCBVc2VyIiwiZW1haWwiOiJ0ZXN0QGVtYWlsLmNvbSIsImlhdCI6MTUxNjIzOTAyMiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3QiLCJhdWQiOiJiZWUtdGVzdCJ9.vwkGnl7lBbzJYk6BtoW3VoA3mnNJVI-nDQU8aK7zOH-rkf2pn5cn6CKwpq7enDInIXro8WtBLNZP8Nr8GQIZKahICuP3YrPRmzv7YIW8LuXKnx1hycg5OAtj0OtQi5FYwwCxTYW9pBF2it7XwQSBcW7yYsOrvgs7jVhThCOsavX0YiAROxZIhk1idZT4Pl3egfUI_dy9iBxcn7xocTnos-94wqJNt8oCVgB8ynj75yJFHJbiQ-9Tym_V3LcMHoEyv67Jzie8KugCgdpuF6EbQqcyfYJ83q5jJpR2LiuWMuGsNSbjjDY-f1vCSMo9L9-R8KFrDylT_BzLvRBswOzW7A"
    profiles: [all]
    ports:
      - "3000:3000"

  bee-observe:
    image: icr.io/i-am-bee/bee-observe:0.0.4
    depends_on:
      - mlflow
      - mongo
      - redis
    command: >
      /bin/sh -c "
        npx mikro-orm --config dist/mikro-orm.config.js migration:up &&
        node ./dist/index.js
      "
    environment:
      PORT: 3009
      AUTH_KEY: observe-auth-key
      FASTIFY_BODY_LIMIT: 10485760
      REDIS_URL: redis://redis:6379/1
      MONGODB_URL: mongodb://mongo:27017?directConnection=true
      DATA_EXPIRATION_IN_DAYS: 7
      MLFLOW_API_URL: http://mlflow:8080/
      MLFLOW_DEFAULT_EXPERIMENT_ID: 0
      MLFLOW_AUTHORIZATION: BASE_AUTH
      MLFLOW_USERNAME: user
      MLFLOW_PASSWORD: password
      MLFLOW_TRACE_DELETE_IN_BATCHES_CRON_PATTERN: "0 */1 * * * *"
      MLFLOW_TRACE_DELETE_IN_BATCHES_BATCH_SIZE: 100
      NODE_ENV: production
    ports:
      - "3009:3009"
    profiles: [all]

  bee-code-interpreter-k3s: &code-interpreter-def
    image: "rancher/k3s:v1.30.5-k3s1"
    command: ["server", "--tls-san", "bee-code-interpreter-k3s"]
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    volumes:
      - k3s-containerd:/var/lib/rancher/k3s/agent/containerd
      - code-interpreter-storage:/storage
      - ./bee-code-interpreter.yaml:/var/lib/rancher/k3s/server/manifests/bee-code-interpreter.yaml
    ports:
      - "50051:30051"
    healthcheck:
      test: "kubectl get pod code-interpreter | grep Running"
      interval: 10s
      retries: 10
      start_period: 30s
    profiles: [all]

  # Locally mounted storage to work with local bee-api instance
  bee-code-interpreter-k3s-infra:
    <<: *code-interpreter-def
    volumes:
      - k3s-containerd:/var/lib/rancher/k3s/agent/containerd
      - ./tmp/code-interpreter-storage:/storage
      - ./bee-code-interpreter.yaml:/var/lib/rancher/k3s/server/manifests/bee-code-interpreter.yaml
    profiles: [ infra ]

  redis:
    image: redis:7
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    profiles: [all, infra]

  mongo:
    image: mongo:7
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 3s
      timeout: 30s
      start_period: 0s
      retries: 30
    volumes:
      - mongo:/data/db
    profiles: [all, infra]

  mlflow:
    image: bitnami/mlflow:2.17.2
    ports:
      - "${MLFLOW_EXPOSED_PORT:-8080}:8080"
    security_opt:
      - "label=disable"
    environment:
      GUNICORN_CMD_ARGS: "--timeout=600"
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "/entrypoint.sh && mlflow server --host 0.0.0.0 --port 8080",
      ]
    volumes:
      - mlflow:/app
      - ./mlflow-entrypoint.sh:/entrypoint.sh:ro
    profiles: [all, infra]

  # MILVUS dependencies
  milvus:
    image: milvusdb/milvus:v2.4.6
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    profiles: [all, infra]
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    profiles: [all, infra]
  minio:
    image: bitnami/minio:2024.10.2
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: bee-api
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio:/bitnami/minio/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    profiles: [all, infra]
  attu: # milvus UI
    image: zilliz/attu:latest
    environment:
      MILVUS_URL: milvus:19530
    ports:
      - 19531:3000
    profiles: [all, infra]
volumes:
  etcd:
  minio:
  milvus:
  redis:
  mongo:
  code-interpreter-storage:
  k3s-containerd:
  mlflow:
